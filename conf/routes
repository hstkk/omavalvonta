# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Naming conventions
#GET	/foo				page?sivu=1
#GET	/foo/uusi			fresh
#POST	/foo/uusi			create
#GET	/foo/:id			show
#GET	/foo/:id/muokkaa	edit
#POST	/foo/:id/muokkaa	update
#POST	/foo/:id/poista		destroy
#GET	/foo/:id/kuittaa	ack(ack = false)
#POST	/foo/:id/kuittaa	ack(ack = true)

# Home page
# News
GET		/													controllers.Application.index(sivu: Int ?= 1)

# Shibboleth
GET		/autentikoi											controllers.shib.Shibboleth.authenticate
GET		/kirjaudu											controllers.shib.Shibboleth.login(url: String ?= "/")
GET		/kirjaudu-ulos										controllers.shib.Shibboleth.logout

# Management
GET     /yllapito											controllers.Application.management

# Users
GET		/kayttajat											@controllers.Users.page(sivu: Int ?= 1)
GET		/kayttajat/:userId									@controllers.Users.show(userId: Long)
GET		/profiili											@controllers.Users.home

# Batches
GET		/erat												@controllers.Batches.page(sivu: Int ?= 1)
GET		/erat/uusi											@controllers.Batches.fresh
GET		/erat/uusi/:productId								@controllers.BatchStep2.fresh(productId: Long)
POST	/erat/uusi/:productId								@controllers.BatchStep2.create(productId: Long)
GET		/erat/:batchId										@controllers.Batches.show(batchId: Long)
POST	/erat/:batchId/kuittaa								@controllers.Batches.ack(batchId: Long)

# Final product
GET		/erat/:batchId/lopputuote							@controllers.FinalProducts.edit(batchId: Long)
POST	/erat/:batchId/lopputuote							@controllers.FinalProducts.save(batchId: Long)
POST	/erat/:batchId/lopputuote/kuittaa					@controllers.FinalProducts.ack(batchId: Long)

# Results
GET		/tulokset											@controllers.Results.page(sivu: Int ?= 1)
# TODO
GET		/tulokset/uusi										@controllers.Results.fresh
GET		/tulokset/uusi/:productId							@controllers.Results.step2(productId: Long)
POST	/tulokset/uusi/:productId							@controllers.Results.step3(productId: Long)
POST	/tulokset/uusi/:productId/:formId					@controllers.Results.create(productId: Long, formId: Long)
GET		/tulokset/:resultsId								@controllers.Results.show(resultsId: Long)
GET		/tulokset/:resultsId/muokkaa						@controllers.Results.edit(resultsId: Long)
POST	/tulokset/:resultsId/muokkaa						@controllers.Results.update(resultsId: Long)
GET		/tulokset/:resultsId/pdf							@controllers.Results.pdfify(resultsId: Long)
GET		/tulokset/:resultsId/historia						@controllers.Results.history(resultsId: Long)
POST	/tulos/:resultsId/:resultId/kuittaa					@controllers.Results.ack(resultsId: Long, resultId: Long)

# Ingredient supply
GET		/raaka-aineet										@controllers.IngredientSupplies.page(sivu: Int ?= 1)
GET		/raaka-aineet/vastaanota							@controllers.IngredientSupplies.fresh
POST	/raaka-aineet/vastaanota							@controllers.IngredientSupplies.create
GET		/raaka-aineet/:ingredientId							@controllers.IngredientSupplies.show(ingredientId: Long)
POST	/raaka-aineet/:ingredientId/kuittaa					@controllers.IngredientSupplies.ack(ingredientId: Long)

# News
GET		/yllapito/uutiset									@controllers.News.page(sivu: Int ?= 1)
GET		/yllapito/uutiset/uusi								@controllers.News.fresh
POST	/yllapito/uutiset/uusi								@controllers.News.create
POST	/yllapito/uutiset/:newsId/muokkaa					@controllers.News.update(newsId: Long)
GET		/yllapito/uutiset/:newsId/muokkaa					@controllers.News.edit(newsId: Long)

# Term
GET		/yllapito/termit									@controllers.Terms.page(sivu: Int ?= 1)
GET		/yllapito/termit/uusi								@controllers.Terms.fresh
POST	/yllapito/termit/uusi								@controllers.Terms.create
POST	/yllapito/termit/:termId/muokkaa					@controllers.Terms.update(termId: Long)
GET		/yllapito/termit/:termId/muokkaa					@controllers.Terms.edit(termId: Long)

# Ingredient
GET		/yllapito/raaka-aineet								@controllers.Ingredients.page(sivu: Int ?= 1)
GET		/yllapito/raaka-aineet/uusi							@controllers.Ingredients.fresh
POST	/yllapito/raaka-aineet/uusi							@controllers.Ingredients.create
POST	/yllapito/raaka-aineet/:ingredientId/muokkaa		@controllers.Ingredients.update(ingredientId: Long)
GET		/yllapito/raaka-aineet/:ingredientId/muokkaa		@controllers.Ingredients.edit(ingredientId: Long)

# Product
GET		/yllapito/tuotteet									@controllers.Products.page(sivu: Int ?= 1)
GET		/yllapito/tuotteet/uusi								@controllers.Products.fresh
POST	/yllapito/tuotteet/uusi								@controllers.Products.create
GET		/yllapito/tuotteet/:productId/muokkaa				@controllers.Products.edit(productId: Long)
POST	/yllapito/tuotteet/:productId/muokkaa				@controllers.Products.update(productId: Long)

# Fieldset / Field
GET		/yllapito/kenttaryhmat								@controllers.Fieldsets.page(sivu: Int ?= 1)
GET		/yllapito/kenttaryhmat/uusi							@controllers.Fieldsets.fresh
POST	/yllapito/kenttaryhmat/uusi							@controllers.Fieldsets.create
GET		/yllapito/kenttaryhmat/:fieldsetId					@controllers.Fieldsets.show(fieldsetId: Long)
GET		/yllapito/kenttaryhmat/:fieldsetId/muokkaa			@controllers.Fieldsets.edit(fieldsetId: Long)
POST	/yllapito/kenttaryhmat/:fieldsetId/muokkaa			@controllers.Fieldsets.update(fieldsetId: Long)

# Form
GET		/yllapito/lomakkeet									@controllers.Forms.page(sivu: Int ?= 1)
GET		/yllapito/lomakkeet/uusi							@controllers.Forms.fresh
POST	/yllapito/lomakkeet/uusi							@controllers.Forms.create
GET		/yllapito/lomakkeet/:formId							@controllers.Forms.show(formId: Long)
GET		/yllapito/lomakkeet/:formId/muokkaa					@controllers.Forms.edit(formId: Long)
POST	/yllapito/lomakkeet/:formId/muokkaa					@controllers.Forms.update(formId: Long)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
